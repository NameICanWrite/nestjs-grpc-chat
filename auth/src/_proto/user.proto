syntax = "proto3";

package user;

import "user.common.proto";

// Requests and Responses

// User

message CreateUserRequest {
  int32 userTypeId = 1;
  string name = 2;
  string description = 3;
  string password = 4;
}

message CreateUserResponse {
  int32 id = 1;
  string name = 2;
  string description = 3;
  common.UserType userType = 4;
  string createdAt = 5;
  string updatedAt = 6;
}

message GetUsersRequest {
  int32 limit = 1;
  int32 offset = 2;
  repeated int32 users = 3;
}

message GetUsersResponse {
  repeated common.User result = 1;
  int32 total = 2;
  int32 limit = 3;
  int32 offset = 4;
}

message GetUserRequest {
  oneof searchBy {
    int32 id = 1;
    string name = 2;
  }
  
}

message GetUserResponse {
  int32 id = 1;
  string name = 2;
  string description = 3;
  common.UserType userType = 4;
  string createdAt = 5;
  string updatedAt = 6;
}

message UpdateUserRequest {
  int32 id = 1;
  string name = 2;
  string description = 3;
  int32 userTypeId = 4;
  string createdAt = 5;
  string updatedAt = 6;
}

message UpdateUserResponse {
  int32 id = 1;
  string name = 2;
  string description = 3;
  common.UserType userType = 4;
  string createdAt = 5;
  string updatedAt = 6;
}

message DeleteUserRequest {
  int32 id = 1;
}

message DeleteUserResponse {}

// UserType

message CreateUserTypeRequest {
  string name = 1;
}

message CreateUserTypeResponse {
  int32 id = 1;
  string name = 2;
  string createdAt = 4;
  string updatedAt = 5;
}

message GetUserTypesRequest {
  int32 limit = 1;
  int32 offset = 2;
}

message GetUserTypesResponse {
  repeated common.UserType result = 1;
  int32 total = 2;
  int32 limit = 3;
  int32 offset = 4;
}

message GetUserTypeRequest {
  int32 id = 1;
}

message GetUserTypeResponse {
  int32 id = 1;
  string name = 2;
  string createdAt = 4;
  string updatedAt = 5;
}

message UpdateUserTypeRequest {
  int32 id = 1;
  string name = 2;
}

message UpdateUserTypeResponse {
  int32 id = 1;
  string name = 2;
  string createdAt = 4;
  string updatedAt = 5;
}

message DeleteUserTypeRequest {
  int32 id = 1;
}

message DeleteUserTypeResponse {}

message VerifyPasswordRequest {
  oneof searchBy {
    int32 userId = 1;
    string userName = 2;
  }
  string password = 3;
}

message VerifyPasswordResponse {
  bool isValid = 1;
  optional int32 userId = 2;
}




// Service

service UserService {

  // User

  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc VerifyPassword(VerifyPasswordRequest) returns (VerifyPasswordResponse);

  // UserType

  rpc CreateUserType(CreateUserTypeRequest) returns (CreateUserTypeResponse);
  rpc GetUserTypes(GetUserTypesRequest) returns (GetUserTypesResponse);
  rpc GetUserType(GetUserTypeRequest) returns (GetUserTypeResponse);
  rpc UpdateUserType(UpdateUserTypeRequest) returns (UpdateUserTypeResponse);
  rpc DeleteUserType(DeleteUserTypeRequest) returns (DeleteUserTypeResponse);
}