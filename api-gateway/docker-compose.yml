version: '3.9'
services:
  api-gateway:
    container_name: api-gateway
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    env_file:
      - .env.development
    volumes:
      - .:/usr/src/app
      - /usr/src/api-gateway/node_modules
    command: yarn start:dev
    ports:
      - "3000:3000"
    depends_on:
      - redis
      - auth
  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
  auth:
    container_name: auth
    build:
      dockerfile: Dockerfile
      context: '../auth-microservice'
      target: development
    env_file:
      - '../auth-microservice/.env.development'
    environment:
      - NODE_ENV=development
    volumes:
      - ../auth-microservice:/usr/src/auth
      - /usr/src/auth/node_modules
    command: yarn start:dev
    ports:
      - "50052:50052"
  postgres:
    container_name: postgres
    image: postgres:14.5-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - '5432:5432'
    volumes:
      - auth:/var/lib/postgresql/data_
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
volumes:
  auth:
  redis:
    driver: local
